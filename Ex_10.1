const express = require("express");
const cors = require("cors");
const app = express();
const PORT = 5000;

app.use(cors());
app.use(express.json());

let items = [
  { id: 1, name: "Item One", price: 100 },
  { id: 2, name: "Item Two", price: 200 }
];

app.get("/api/items", (req, res) => res.json(items));

app.post("/api/items", (req, res) => {
  const { name, price } = req.body;
  const newItem = { id: Date.now(), name, price };
  items.push(newItem);
  res.json(newItem);
});

app.put("/api/items/:id", (req, res) => {
  const id = parseInt(req.params.id);
  const { name, price } = req.body;
  items = items.map(i => (i.id === id ? { ...i, name, price } : i));
  res.json({ message: "Updated" });
});

app.delete("/api/items/:id", (req, res) => {
  const id = parseInt(req.params.id);
  items = items.filter(i => i.id !== id);
  res.json({ message: "Deleted" });
});

const frontendHtml = `
<!DOCTYPE html>
<html>
<head>
<title>Fullstack CRUD</title>
<meta charset="UTF-8">
<script src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
</head>
<body>
<div id="root"></div>
<script type="text/babel">
function App() {
  const [items, setItems] = React.useState([]);
  const [name, setName] = React.useState("");
  const [price, setPrice] = React.useState("");
  const [editId, setEditId] = React.useState(null);

  React.useEffect(() => { fetchItems(); }, []);

  const fetchItems = () => {
    fetch("/api/items").then(r => r.json()).then(setItems);
  };

  const addItem = () => {
    if (!name || !price) return;
    fetch("/api/items", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, price })
    }).then(fetchItems);
    setName(""); setPrice("");
  };

  const updateItem = () => {
    fetch("/api/items/" + editId, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, price })
    }).then(() => { fetchItems(); setEditId(null); setName(""); setPrice(""); });
  };

  const deleteItem = (id) => {
    fetch("/api/items/" + id, { method: "DELETE" }).then(fetchItems);
  };

  const startEdit = (item) => {
    setEditId(item.id);
    setName(item.name);
    setPrice(item.price);
  };

  return (
    <div style={{ textAlign: "center", marginTop: 40 }}>
      <h1>Fullstack CRUD App</h1>
      <input placeholder="Name" value={name} onChange={e => setName(e.target.value)} />
      <input placeholder="Price" value={price} onChange={e => setPrice(e.target.value)} type="number" />
      <button onClick={editId ? updateItem : addItem}>{editId ? "Update" : "Add"}</button>
      <ul style={{ listStyle: "none", padding: 0 }}>
        {items.map(i => (
          <li key={i.id}>
            {i.name} - â‚¹{i.price}
            <button onClick={() => startEdit(i)}>Edit</button>
            <button onClick={() => deleteItem(i.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}
ReactDOM.createRoot(document.getElementById("root")).render(<App />);
</script>
</body>
</html>
`;

app.get("*", (req, res) => res.send(frontendHtml));
app.listen(PORT, () => console.log("Server running on port " + PORT));
